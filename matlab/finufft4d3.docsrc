% FINUFFT4D3   4D complex nonuniform FFT of type 3 (nonuniform to nonuniform).
%
% f = finufft4d3(x,y,z,p,c,isign,eps,s,t,u,v)
% f = finufft4d3(x,y,z,p,c,isign,eps,s,t,u,v,opts)
%
% This computes, to relative precision eps, via a fast algorithm:
%
%              nj
%     f[k]  =  SUM   c[j] exp(+-i (s[k] x[j] + t[k] y[j] + u[k] z[j] + v[k] p[j])),
%              j=1
%                              for k = 1, ..., nk
%   Inputs:
%     x,y,z,p  coordinates of nonuniform sources in R^4, each a length-nj vector.
%     c     length-nj complex vector of source strengths. If numel(c)>nj,
%           expects a stack of vectors (eg, a nj*ntrans matrix) each of which is
%           transformed with the same source and target locations.
ISIGNEPS
%     s,t,u,v  frequency coordinates of nonuniform targets in R^4,
%           each a length-nk vector.
OPTS
%   Outputs:
%     f     length-nk complex vector of values at targets, or, if ntrans>1,
%           a matrix of size (nk,ntrans)
%
NOTES
